name: Sync to Hugging Face Space

"on":
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  deploy-to-hf:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      HF_USERNAME: ${{ vars.HF_USERNAME }}
      SPACE_NAME:  ${{ vars.SPACE_NAME }}
      HF_TOKEN:    ${{ secrets.HF_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Verify inputs
        run: |
          set -e
          if [ -z "${{ env.HF_USERNAME }}" ] || [ -z "${{ env.SPACE_NAME }}" ]; then
            echo "::error::Missing repo-level variables HF_USERNAME or SPACE_NAME."
            exit 1
          fi
          if [ -z "${{ env.HF_TOKEN }}" ]; then
            echo "::error::Missing secret HF_TOKEN."
            exit 1
          fi

      - name: Prepare clean deploy tree (_dist)
        run: |
          set -e
          rm -rf _dist
          mkdir -p _dist
          # Core app files
          cp requirements.txt _dist/
          # ⬇️ Minimal change: include all Python modules (app.py, assistant.py, ui.py, tools.py, config.py, __init__.py)
          cp ./*.py _dist/ || true
          # Space metadata in README (front matter)
          if [ -f README.md ]; then cp README.md _dist/; fi
          # Optional: example env for docs (HF ignores .env files)
          if [ -f .env.example ]; then cp .env.example _dist/; fi
          # Runtime data/assets
          if [ -d me ]; then mkdir -p _dist/me && cp -r me/* _dist/me/; fi
          # Keep the Space clean
          printf ".env\n*.pyc\n__pycache__/\n" > _dist/.gitignore

      - name: Validate runtime assets exist
        run: |
          set -e
          ls -la _dist
          # Validate me/Profile.json specifically (Linux is case-sensitive)
          if [ -d "_dist/me" ]; then
            if [ ! -f "_dist/me/Profile.json" ] && [ ! -f "_dist/me/profile.json" ]; then
              echo "::warning::'_dist/me/Profile.json' not found. If your app expects it, add it to the repo."
            fi
          fi

      - name: Push to Hugging Face Space (force clean deploy)
        run: |
          set -e
          cd _dist
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Deploy to HF Space"
          git branch -M main
          # Use token in URL for non-interactive push
          git remote add space https://${{ env.HF_USERNAME }}:${{ env.HF_TOKEN }}@huggingface.co/spaces/${{ env.HF_USERNAME }}/${{ env.SPACE_NAME }}
          git push -f space main
