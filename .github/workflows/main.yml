name: Sync to Hugging Face Space

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      HF_USER:  janaka2                 # <--- your HF username/org
      HF_SPACE: RAG_Powerd_Chat_Bot     # <--- EXACT Space name (as in URL)

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set git identity
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Install deps (hf cli)
        run: |
          pipx install huggingface_hub || pip install --upgrade huggingface_hub

      - name: Login to Hugging Face (adds git credential helper)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          if [ -z "${HF_TOKEN}" ]; then
            echo "::error::HF_TOKEN is not set. Add it in GitHub > Settings > Secrets and variables > Actions"
            exit 1
          fi
          # Add to git credential helper so we don't embed token in URL
          huggingface-cli login --token "${HF_TOKEN}" --add-to-git-credential

          # Minimal sanity check: show who we are (does NOT print token)
          python - <<'PY'
from huggingface_hub import whoami, HfApi
import os, sys
tok=os.environ.get("HF_TOKEN")
try:
    me=whoami(tok)
    print(f"✅ Logged in to HF as: {me.get('name') or me.get('email')}")
except Exception as e:
    print("❌ HF login check failed:", e)
    sys.exit(1)
PY

      - name: Ensure Space exists (create if missing)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USER:  ${{ env.HF_USER }}
          HF_SPACE: ${{ env.HF_SPACE }}
        run: |
          python - <<'PY'
from huggingface_hub import HfApi
import os
api = HfApi()
user  = os.environ["HF_USER"]
space = os.environ["HF_SPACE"]
token = os.environ["HF_TOKEN"]
repo_id = f"{user}/{space}"
# create repo if it doesn't exist; set SDK to gradio if first time
api.create_repo(
    repo_id=repo_id,
    repo_type="space",
    exist_ok=True,
    token=token,
    space_sdk="gradio"
)
print(f"✅ Space ensured: https://huggingface.co/spaces/{repo_id}")
PY

      - name: Install Git LFS
        run: git lfs install

      - name: Push to HF Space (main -> main)
        env:
          HF_USER:  ${{ env.HF_USER }}
          HF_SPACE: ${{ env.HF_SPACE }}
        run: |
          set -e
          # Use plain URL; credentials provided via credential helper from huggingface-cli login
          REMOTE_URL="https://huggingface.co/spaces/${HF_USER}/${HF_SPACE}"
          echo "Pushing to ${REMOTE_URL}"
          git push "${REMOTE_URL}" "HEAD:main"

      # Optional: basic diagnostics if push fails
      - name: Print remotes & HEAD (debug)
        if: failure()
        run: |
          git remote -v
          git status
          git log -1 --oneline
